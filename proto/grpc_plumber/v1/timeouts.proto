syntax = "proto3";
package grpc_plumber.v1;

import "google/protobuf/duration.proto";

service TimeoutService {
  rpc SlowUnary(SlowUnaryRequest) returns (SlowUnaryResponse);
  rpc SlowServerStream(SlowServerStreamRequest) returns (stream SlowServerStreamResponse);
  rpc SlowClientStream(stream SlowClientStreamRequest) returns (SlowClientStreamResponse);
  rpc SlowBiDirectionStream(stream SlowBiDirectionStreamRequest) returns (stream SlowBiDirectionStreamResponse);
}

message SlowUnaryRequest {
  google.protobuf.Duration sleep_time = 2;
}
message SlowUnaryResponse {}

message SlowServerStreamRequest {
  int32 message_count = 1;
  google.protobuf.Duration sleep_time = 2;
}
message SlowServerStreamResponse {
  int32 message_index = 1;
}

message SlowClientStreamRequest {
  int32 message_index = 1;
  google.protobuf.Duration sleep_time = 2;
}
message SlowClientStreamResponse {
  int32 message_count = 1;
}

// SlowBiDirectionStreamRequest requests a number of messages to be sent back
// to the client, each after a specified sleep time. The server will respond
// with the same message index.
message SlowBiDirectionStreamRequest {
  int32 message_index = 1;
  int32 message_count = 2;
  google.protobuf.Duration sleep_time = 3;
}
message SlowBiDirectionStreamResponse {
  int32 message_index = 1;
}
